name: CI/CD
on: push
jobs:
  setup-dev:
    runs-on: 'ubuntu-latest'
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3

      - name: Cache PNPM packages
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: 'Setup Node.js'
        uses: actions/setup-node@v2

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: 6.0.2

      - name: 'Install dependencies'
        run: pnpm install

  commit:
    runs-on: 'ubuntu-latest'
    needs: setup-dev
    steps:
      - uses: webiny/action-conventional-commits@v1.1.0
  linter:
    needs: setup-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: 6.0.2

      - name: 'Install dependencies'
        run: pnpm install
      - name: Lint
        run: pnpm run lint
  lighthouse:
    needs: setup-dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Restore cached dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Setup pnpm
        uses: pnpm/action-setup@v2.0.0
        with:
          version: 6.0.2
      - name: 'Install dependencies'
        run: pnpm install

      - name: build app
        run: pnpm run build

      - name: start app
        run: nohup pnpm run dev > /dev/null 2>&1 &

      - name: Run Lighthouse
        run: |
          pnpm install -g @lhci/cli@0.11.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache
          key: cypress-cache-${{ runner.os }}-${{ hashFiles('pnpm-lock.yaml') }}

      - uses: pnpm/action-setup@v2
        with:
          version: latest
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: https://registry.npmjs.org/
          cache: pnpm

      - run: pnpm install

      - name: Cypress PNPM Patch
        run: cp pnpm-lock.yaml package-lock.json

      - name: Cypress
        uses: cypress-io/github-action@v4
        with:
          install-command: echo
          build: pnpm run build
          start: npx vite --port 3001
          browser: chrome
